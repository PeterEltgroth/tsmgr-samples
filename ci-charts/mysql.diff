diff --git a/stable/mysql/.helmignore b/stable/mysql/.helmignore
index a1c17ae45..e329e2a99 100644
--- a/stable/mysql/.helmignore
+++ b/stable/mysql/.helmignore
@@ -1,2 +1,3 @@
 .git
-OWNERS
\ No newline at end of file
+OWNERS
+images
diff --git a/stable/mysql/bind.yaml b/stable/mysql/bind.yaml
new file mode 100644
index 000000000..75a832dc1
--- /dev/null
+++ b/stable/mysql/bind.yaml
@@ -0,0 +1,10 @@
+template: |
+  local filterfunc(j) = std.length(std.findSubstr("mysql", j.name)) > 0;
+  local s1 = std.filter(filterfunc, $.services);
+  {
+    hostname: s1[0].status.loadBalancer.ingress[0].ip,
+    name: s1[0].name,
+    jdbcUrl: "jdbc:mysql://" + self.hostname + "/my_db?user=" + self.username + "&password=" + self.password + "&useSSL=false",
+    uri: "mysql://" + self.username + ":" + self.password + "@" + self.hostname + ":" + self.port + "/my_db?reconnect=true",
+    password: $.secrets[0].data['mysql-root-password'],
+    port: 3306,
+    username: "root"
+  }
diff --git a/stable/mysql/my-values.yaml b/stable/mysql/my-values.yaml
new file mode 100644
index 000000000..7d385871d
--- /dev/null
+++ b/stable/mysql/my-values.yaml
@@ -0,0 +1 @@
+mysqlRootPassword: monkey123
diff --git a/stable/mysql/mysql-0.15.0.tgz b/stable/mysql/mysql-0.15.0.tgz
new file mode 100644
index 000000000..cbe3a66d6
Binary files /dev/null and b/stable/mysql/mysql-0.15.0.tgz differ
diff --git a/stable/mysql/plans.yaml b/stable/mysql/plans.yaml
new file mode 100755
index 000000000..b2ad9f1b2
--- /dev/null
+++ b/stable/mysql/plans.yaml
@@ -0,0 +1,6 @@
+- name: "small"
+  description: "default (small) plan for mysql"
+  file: "small.yaml"
+- name: "medium"
+  description: "medium sized plan for mysql"
+  file: "medium.yaml"
diff --git a/stable/mysql/plans/medium.yaml b/stable/mysql/plans/medium.yaml
new file mode 100755
index 000000000..15caa73bd
--- /dev/null
+++ b/stable/mysql/plans/medium.yaml
@@ -0,0 +1,7 @@
+persistence:
+  size: 16Gi
+
+resources:
+  requests:
+    memory: 256Mi
+    cpu: 110m
diff --git a/stable/mysql/plans/small.yaml b/stable/mysql/plans/small.yaml
new file mode 100755
index 000000000..7e1fcf38c
--- /dev/null
+++ b/stable/mysql/plans/small.yaml
@@ -0,0 +1,4 @@
+resources:
+  requests:
+    memory: 125Mi
+    cpu: 75m
diff --git a/stable/mysql/values.yaml b/stable/mysql/values.yaml
index 3563e823d..bc31fb4b7 100644
--- a/stable/mysql/values.yaml
+++ b/stable/mysql/values.yaml
@@ -29,7 +29,7 @@ testFramework:

 ## Create a database
 ##
-# mysqlDatabase:
+mysqlDatabase: my_db

 ## Specify an imagePullPolicy (Required)
 ## It's recommended to change this to 'Always' if the image tag is 'latest'
@@ -90,7 +90,7 @@ persistence:
   ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
   ##   GKE, AWS & OpenStack)
   ##
-  # storageClass: "-"
+  storageClass: standard
   accessMode: ReadWriteOnce
   size: 8Gi
   annotations: {}
@@ -141,7 +141,7 @@ service:
   annotations: {}
   ## Specify a service type
   ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services---service-types
-  type: ClusterIP
+  type: LoadBalancer
   port: 3306
   # nodePort: 32000

